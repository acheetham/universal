(function () {

    "use strict";

    var fluid = require("infusion"),
        gpii = fluid.registerNamespace("gpii");

    gpii.requests.request.handler.userUpdatePreInit = function (that) {
        // merge newPreferences into oldPreferences with overwriting
        that.mergePreferences = function (oldPreferences, newPreferences) { 
            fluid.each(newPreferences, function (value, name) {
                oldPreferences[name] = value;
            });
            return oldPreferences;
        };

    };

    gpii.requests.request.handler.userUpdate = function (requestProxy, token, handler, newPreferences) {
        var options = {
            preferences: handler.personalControlPanel.userPreferences,
            device: handler.personalControlPanel.userDevice
        };

        /* merge newPreferences into options.preferences here */
        options.preferences = handler.mergePreferences(options.preferences, newPreferences);

        handler.matchMakerDataSource.set(null, options, function (match) {
            handler.lifecycleManager.start({userToken: token}, match, function (response) {
                fluid.log("Lifecycle manager returned: ", response);
                requestProxy.events.onSuccess.fire("User with token " + token + " was successfully updated.\n");
            });
        });
    };

})();
