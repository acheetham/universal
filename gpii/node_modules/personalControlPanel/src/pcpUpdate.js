(function () {

    "use strict";

    var fluid = require("infusion"),
        gpii = fluid.registerNamespace("gpii"),
        exec = require("child_process").exec,
        http = require("http");

    // the update action shouldn't use http GET/POST requests to perform its task
    // Lifecycle Manager integration would be a better solution
    gpii.requests.request.handler.pcpUpdate = function(requestProxy, request, token) {
        // get the preferences for token
		var fetchPreferences = function(token) {
			http.get("http://localhost:8081/user/" + token, function (response) {
		    	var userPreferences = "";

		        response.on("data", function(chunk) {
		            userPreferences += chunk;
		        });

		        response.on("end", function() {
		        	userPreferences = JSON.parse(userPreferences);
		  			updatePreferences(token, userPreferences, request.req.body);
		        });
		    }).on("error", function(e) {
			  fluid.log("unable to get user preferences: " + e.message);
			  fluid.fail(e);
			});
		};

        // merge the old and the new preferences
		var updatePreferences = function(token, oldPreferences, newPreferences) {
			// transformation of the newPreferences values (fluid.transform could be used)
			for (var entry in newPreferences) {
		        var valueToSet = newPreferences[entry];
		        if (parseFloat(valueToSet)) {
		            valueToSet = parseFloat(valueToSet);
		        } else if (valueToSet === "true" || valueToSet === "false") {
		            valueToSet = valueToSet === "true";
		        }

		        if(oldPreferences[entry] === undefined) {
		        	oldPreferences[entry] = [];
		        }
		        fluid.set(oldPreferences[entry], "0.value", valueToSet);
		    }
		    
		    // Save the new settings via a POST request
		    var userPreferencesData = JSON.stringify(oldPreferences, null, 4);
		    var response = http.request({
		    	hostname: "localhost",
				port: 8081,
				path: "/user/" + token,
				method: "POST",
				headers: {
					"Content-Type": "application/json",
					"Content-Length": userPreferencesData.length
				}
		    }, function () {
		    	exec("curl localhost:8081/user/" + token + "/login");
		    	//requestProxy.events.onSuccess.fire(204); // no content status
		    });
		    response.write(userPreferencesData);
		    response.end();
		};
		    
		fetchPreferences(token);
		requestProxy.events.onSuccess.fire(204); // no content status

	    // TODO: update the user profile here
	    // the new settings are in request.req.body
	    //exec("curl localhost:8081/user/" + token + "/update"); // the port shouldn't be hard-coded
	    //requestProxy.events.onSuccess.fire(204); // no content status
	};
})();
